from time import strftime, gmtimeenc_type = 'mlp'dec_type = 'rnn'data_type = 'NBA'using_gpu = True#train detailbatch_size = 6 * 3 * (2 ** 5)lr = 1e-3lr_decay = 200gamma = 0.5static_training_epoch = 20dynamic_training_epoch = 100dec_modal = 6   # ?dec_repeat_num = 20  # ?segment = 100data_num = 50000train = 0.65val = 0.10test = 0.25scale = 5e-5# model hidden sizeagent_emb_hid = 2 ** 7agent_dec_hid = 2 ** 7agent_update_hid = 2 ** 7edge_update_hid = 2 ** 7encoding_func_hid = 2 ** 7decoding_func_hid = 2 ** 7graph_gru_hid = 2 ** 8enc_att_hid = 2 ** 7context_dim = 3context_emb_kers = 5context_emb_pad = 3context_emb_hid = 2 ** 7  # ???# hyper parameter for different datainput_dim = 2context_in = 10edge_types = 6re_encoding_gap = 5encoding_horizon = 5agent_cat = 3time_steps = 15predict_steps = 10#Gumbeltemp = 0.5interval = 10 ** 1samples = 10 ** 3log = strftime('logs/{}/{}_%m-%d_%H:%M:%S/log.txt'.format(data_type, data_type), gmtime())def init_args(args):    global cuda, enc, dec, agent_size, data_type, log    cuda = args.cuda    #enc = args.enc    #dec = args.dec    data_type = args.data_type    #agent_size = args.agent_size    log = strftime('logs/{}_%m-%d_%H:%M:%S.txt'.format(data_type), gmtime())